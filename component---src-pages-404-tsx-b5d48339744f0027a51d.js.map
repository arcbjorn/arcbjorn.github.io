{"version":3,"file":"component---src-pages-404-tsx-b5d48339744f0027a51d.js","mappings":"6OAqBA,EAf8C,WAC5C,OACEA,EAAAA,cAAAA,MAAAA,CAAKC,UCPS,oCDQZD,EAAAA,cAAAA,MAAAA,CAAKC,UCPU,uCDQbD,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACE,EAAAA,MAAD,KAAQC,EAAAA,EAAAA,iBAEVH,EAAAA,cAACI,EAAAA,KAAD,CAAMC,GAAG,KACPL,EAAAA,cAACE,EAAAA,MAAD,KAAQC,EAAAA,EAAAA,a,UEKlB,EAX8C,WAC5C,OACEH,EAAAA,cAACM,EAAAA,EAAD,KACEN,EAAAA,cAACO,EAAAA,OAAD,KACEP,EAAAA,cAAAA,QAAAA,KAAQQ,EAAAA,EAAAA,iBAEVR,EAAAA,cAACS,EAAD","sources":["webpack://arcbjorn-personal-website/./src/components/notFoundInfo/NotFoundInfo.tsx","webpack://arcbjorn-personal-website/./src/components/notFoundInfo/notFoundInfo.module.css","webpack://arcbjorn-personal-website/./src/pages/404.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Link, Trans } from \"gatsby-plugin-react-i18next\";\n\nimport { ETranslationKey } from \"i18n/types\";\nimport * as css from \"./notFoundInfo.module.css\";\n\nconst NotFoundInfo: React.FunctionComponent = () => {\n  return (\n    <div className={css.info}>\n      <div className={css.message}>\n        <h1>\n          <Trans>{ETranslationKey.PAGE_NOT_FOUND}</Trans>\n        </h1>\n        <Link to=\"/\">\n          <Trans>{ETranslationKey.GO_BACK}</Trans>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFoundInfo;\n","// extracted by mini-css-extract-plugin\nexport var info = \"notFoundInfo-module--info--IZ9Am\";\nexport var message = \"notFoundInfo-module--message---d8Jr\";","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { Helmet } from \"react-helmet\";\n\nimport Layout from \"layouts/Layout\";\nimport NotFoundInfo from \"components/notFoundInfo/NotFoundInfo\";\nimport { EDocumentTitle } from \"types\";\n\nconst NotFoundPage: React.FunctionComponent = () => {\n  return (\n    <Layout>\n      <Helmet>\n        <title>{EDocumentTitle.NOT_FOUND_PAGE}</title>\n      </Helmet>\n      <NotFoundInfo />\n    </Layout>\n  );\n};\n\nexport default NotFoundPage;\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: { language: { eq: $language } }) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;\n"],"names":["React","className","Trans","ETranslationKey","Link","to","Layout","Helmet","EDocumentTitle","NotFoundInfo"],"sourceRoot":""}